// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organisation {
  id          Int          @id @default(autoincrement())
  name        String
  departments Department[]
  createdAt DateTime  @default(now())
}

model Department {
  id             Int          @id @default(autoincrement())
  name           String
  organisationId Int
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  tasks          Task[]
  messages       Message[]
  createdAt DateTime  @default(now())
}

model Task {
  id           Int        @id @default(autoincrement())
  title        String
  description  String
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
  userId       Int?
  user         User?       @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
}

model OTP {
  id     Int    @id @default(autoincrement())
  code   String
  userId Int
  user   User   @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  expiresAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP + INTERVAL '1 hour'"))
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  password String
  otps     OTP[]
  messages Message[]
  tasks    Task[]
  createdAt DateTime  @default(now())
}

model Message {
  id           Int         @id @default(autoincrement())
  content      String
  createdAt DateTime  @default(now())
  userId       Int
  user         User        @relation(fields: [userId], references: [id])
  departmentId Int?
  department   Department? @relation(fields: [departmentId], references: [id])
}
