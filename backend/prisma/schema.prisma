// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organisation {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  departments Department[]
}


model Department {
  id             Int      @id @default(autoincrement())
  name           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  organisationId Int
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  users          User[]
  tasks          Task[]
  messages       Message[] 
}


model Task {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deadline     DateTime?
  completed    Boolean  @default(false)
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
}

model OTP {
  id        Int      @id @default(autoincrement())
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}


model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  organisationId Int?
  organisation   Organisation? @relation(fields: [organisationId], references: [id])
  departmentId   Int?
  department     Department? @relation(fields: [departmentId], references: [id])
  roleId         Int?
  role           Role?    @relation(fields: [roleId], references: [id])
  tasks          Task[]
  sentMessages   Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  otps           OTP[]
}



model Message {
  id           Int      @id @default(autoincrement())
  content      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  senderId     Int
  sender       User     @relation("SentMessages", fields: [senderId], references: [id])
  recipientId  Int
  recipient    User     @relation("ReceivedMessages", fields: [recipientId], references: [id])
  departmentId Int?
  department   Department? @relation(fields: [departmentId], references: [id])
}
